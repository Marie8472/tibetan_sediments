/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Nextflow config file for testing taxonomy workflow 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Defines input files and everything required to run a fast and simple pipeline test.

    Use as follows:
        nextflow run . \
        -profile singularity \
        -c ../mmseqs.config \
        -w mmseqs_work \
        --input ../samplesheet.csv \
        --outdir mmseqs_result

----------------------------------------------------------------------------------------
*/

// Process-specific resource requirements
process {
    executor = 'local'
    maxRetries = 2
    
    withName: MMSEQS_DATABASES {
        memory = '500.GB'
        cpus   = 24
    }

    withName: MMSEQS_CREATEDB {
        memory = '400.GB'
        cpus   = 24
    }

    withName: MMSEQS_TAXONOMY {
        memory = '900.GB'
        cpus   = 40
        time   = '72.h'
        ext.args = '--translation-table 11 --orf-start-mode 0 -s 5.0 --search-type 2 --lca-ranks kingdom,phylum,class,order,family,genus,species --tax-lineage 1'
    }

    withName: MMSEQS_CREATETSV {
        memory = '700.GB'
        cpus   = 25
    }
    withName:BAKTA_BAKTA {
      memory = 100.GB //120.GB
      time = 280.h
      cpus = 20
      maxForks = 2
      errorStrategy = 'ignore'
   }
   withName:GECCO_RUN {
      memory = 80.GB
      time = 48.h
      cpus = 20
   }
   withName:ANTISMASH_ANTISMASHLITE {
      memory = 50.GB
      time = 280.h
      cpus = 15
      maxForks = 3
      errorStrategy = 'ignore'
   }
   withName:DEEPBGC_PIPELINE {
      memory = 100.GB
      time = 280.h
      cpus = 10
      maxForks = 3
   }
}

// Container settings
singularity {
    //enabled = true
    //autoMounts = true
    cacheDir = '/Net/Groups/ccdata/apps/singularity'
    }

conda {
    cacheDir = '/Net/Groups/ccdata/apps/conda_envs'
}


params {
    config_profile_name        = 'Taxonomic classification test profile'
    config_profile_description = 'test mmseqs2 with GTDB'

    // Limit resources so that this can run on GitHub Actions
    max_cpus   = 50
    max_memory = '990.GB'
    max_time   = '200.h'

    // Input data
    run_taxa_classification                         = true
    taxa_classification_mmseqs_db                   = '/Net/Groups/ccdata/databases/mmseqs/GTDB_v220/mmseqs_database/'
    taxa_classification_mmseqs_taxonomy_orffilters  = '4.0'
    
    annotation_tool                                 = 'bakta'
    save_annotations                                = true
    annotation_bakta_db                             = '/Net/Groups/ccdata/databases/bakta1.9.3/db'
    save_db                                         = true
    run_amp_screening                               = true
    run_bgc_screening                               = false
    run_arg_screening                               = false
    amp_skip_macrel                                 = false
    amp_skip_ampir                                  = false
    amp_skip_amplify                                = false
    amp_ampir_model                                 = 'mature'
    amp_run_hmmsearch                               = false
    amp_hmmsearch_models                            = '/Net/Groups/ccdata/projects/paleofensin/03-data/20240404AMPs.hmm'
    //arg_rgi_db                                      = '/Net/Groups/ccdata/databases/rgi_card_db'
    //arg_amrfinderplus_db                            = '/Net/Groups/ccdata/databases/amrfinderdb'
    //arg_deeparg_db                                  = ''
    bgc_antismash_db                                = '/Net/Groups/ccdata/databases/antismash7.1.0/antismash_db'
    bgc_antismash_installdir                        = '/Net/Groups/ccdata/databases/antismash7.1.0/antismash_dir'
    bgc_antismash_cbgeneral                         = false
    bgc_antismash_cbknownclusters                   = false
    bgc_antismash_cbsubclusters                     = false
    bgc_antismash_smcogtrees                        = false
    bgc_antismash_ccmibig                           = false
    bgc_antismash_pfam2go                           = false
    bgc_antismash_rre                               = false
    bgc_antismash_tfbs                              = false
    bgc_deepbgc_db                                  = '/Net/Groups/ccdata/databases/deepbgc'
    amp_ampcombi_db                                 = '/Net/Groups/pbtdata/01_RAG/09_sediments/tibetan_sediments/04-analysis/funcscan/ampcombi_db/amp_ref_database'
}
